apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.fakhar.NYTimeAssignApp"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "getNYTimesDataSet", "\"http://api.nytimes.com/\""
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    //it should be true other Fragment would not be mocked and test case wouldn't run
    testOptions {
        unitTests.returnDefaultValues = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
/**Can be used many jar files so we need to implement fileThree in gradle file*/
    implementation fileTree(dir: 'libs', include: ['*.jar'])
/**Android support libraries used for user interface design pattern (action bar, navigation drawer, listing items) as well as backward compatible versions of Android framework*/
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    implementation "com.android.support:recyclerview-v7:26.1.0"
/**Time & Date Formatting library */
    implementation 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'

/**OkHttp that logs HTTP request and response data*/
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
/**compile time dependency injection framework added for simplifies the DI into Android components*/
    annotationProcessor 'com.google.dagger:dagger-compiler:2.0'
    implementation 'com.google.dagger:dagger:2.2'
/**Library that can be used to convert Java Objects into their JSON representation. It can also be used to convert a JSON string to an equivalent object*/
    implementation 'com.google.code.gson:gson:2.8.2'
/**Retrofit library is a REST Client for Java and Android, An easy JSON uploading and retrieving, It use the OkHttp library for HTTP requests*/
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.1'
/**RxJava Reactive Extensions for the JVM â€“ a library for composing asynchronous and event-based programs using observable sequences for the Java VM */
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.1.6'
/** Library used for common annotations For The Java Platform and for Dagger2 dependency */
    compileOnly 'javax.annotation:jsr250-api:1.0'
/** An image loading and caching library for Android */
    implementation 'com.github.bumptech.glide:glide:3.8.0'

/**Libraries used for automated Unit Testing*/
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
/**Most popular Mocking framework for unit tests written in Java*/
    testImplementation 'org.mockito:mockito-core:2.8.0'
/**PowerMock is for UnitTest  */
    testImplementation 'org.powermock:powermock-api-mockito2:1.7.0RC2'
    testImplementation 'org.powermock:powermock-module-junit4:1.7.0'
    testImplementation 'org.powermock:powermock-core:1.7.0'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.7.0'
    androidTestImplementation 'junit:junit:4.12'



}
